@model PaginationModel
<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item" id="prevPage">
            <a class="page-link" href="#" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
                <span class="sr-only">Previous</span>
            </a>
        </li>
        @{
            var page = 1;
            for (int i = 0; i < Model.TotalPages; i++)
            {
                        <li class="page-item" >
                    <a class="page-link" id="goToPage" onclick="goToPage(@(i + 1))" href="#" data-page="@(i + 1)" class="page-number">@(i + 1)</a>
                        </li>
            }
        }
        <li class="page-item" id="nextPage">
            <a class="page-link" href="#" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
    </ul>
</nav>

<script>
    function getQueryParam(param) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(param);
    }
    const TotalPages = @Model.TotalPages;
    var CurrentPage = parseInt(getQueryParam('pageNumber')) || 1;

    function UpdatePagination(){
        
        window.location.href = `@Url.Action("ListBranches", "Branches")?pageNumber=${CurrentPage}`;
    }
    function NextPage(){
        if (CurrentPage === @Model.TotalPages) return;
        CurrentPage = CurrentPage + 1;
        UpdatePagination();

    }
    function PrevPage(){
        if (CurrentPage === 1) return;
        CurrentPage = CurrentPage - 1;
        UpdatePagination();
    }
    function goToPage(page){
        if (page < 1 || page > @Model.TotalPages || page == CurrentPage) return;
        CurrentPage = page;
        UpdatePagination();
    }
    document.getElementById("nextPage").addEventListener("click", NextPage);
    document.getElementById("prevPage").addEventListener("click", PrevPage);
    document.getElementById("goToPage").addEventListener("goToPage", PrevPage)
    ;
    document.getElementById('prevPage').classList.toggle('disabled', CurrentPage === 1);
    document.getElementById('nextPage').classList.toggle('disabled', CurrentPage === @Model.TotalPages);
</script>
